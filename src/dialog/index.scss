@use "../variables.scss" as *;
@forward "../variables";
@use "sass:math";

.modal {
  pointer-events: none;
  &>.modal-backdrop { pointer-events: all; }
  &>.modal-dialog { pointer-events: all; }
}

.modal>.modal-backdrop {
  background: none;
  z-index: -10;
}

// A lot of styles are applied by the outermost .modal class by itself, which we skip using.
// So re-apply some of the stuff we lost.
/*.modal-dialog {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: $zindex-modal;
}

.modal-content {
  &-fill{
    height: 100%;
  }
  width: 100%;
}

.modal-backdrop {
  width: auto;
  height: auto;
  right: 0;
  bottom: 0;
}

.modal-portal-container>.modal-dialog {
  // TODO: Does reverting BS's default cause problems? We don't use its close button...
  pointer-events: auto;
}

// Add an additional width style to modal dialogs
.modal-dialog.modal-max {
  max-width: calc(100vw - 4em);
}

.modal-backdrop {
  background: rgba(0, 0, 0, 0.25);
}

// Browsers that don't support backdrop-blur make the backdrop more opaque to compensate
@supports not (backdrop-filter: blur(4px)) {
  .modal-backdrop {
    background: rgba(0, 0, 0, 0.4);
  }
}*/

// Quickly make a transition that fades the backdrop filter blur in/out
.backdrop-filter-transition {
  transition: filter 0.25 ease-in-out;
  &.transition-enter-init,
  &.transition-exit-transition,
  &.transition-exit-finalize {
    backdrop-filter: blur(0px);
    pointer-events: none;
  }
  &.transition-exit-init,
  &.transition-enter-transition,
  &.transition-enter-finalize {
    backdrop-filter: blur(var(--transition-backdrop-filter-blur, 4px));
  }
}

.dialog-shake {
  animation: dialog-shake 0.58s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: scale(1) rotate(0deg);
}

$dialog-shake-1: math.div(0.01, 2);
$dialog-shake-2: math.div(0.0125, 2);
$dialog-shake-3: math.div(0.0175, 2);

@keyframes dialog-shake {
  16.7%,
  83.3% {
    //transform: scale(1 - $dialog-shake-1);
    transform: translateX($dialog-shake-1 * 500px);
  }

  33.3%,
  66.7% {
    //transform: scale(1 + $dialog-shake-2);
    transform: translateX($dialog-shake-2 * -500px);
  }

  50% {
    //transform: scale(1 - $dialog-shake-3);
    transform: translateX($dialog-shake-3 * 500px);
  }
}

:root.document-scroll-hidden {
  /*
  position: fixed is awkward because we have to finagle with scrolling

  but it's the ONLY solution that works on iOS Safari

  This would be solved easily with overscroll-behavior
  but surprise surprise, the only browser needs it doesn't support it :/

  */
  position: fixed;
  overflow: hidden;
  max-width: calc(100% - var(--root-scrollbar-width, 0px));
  max-height: calc(100% - var(--root-scrollbar-height, 0px));
  top: calc(-1 * var(--root-scrollstop-top));
  left: calc(-1 * var(--root-scrollstop-left));
}

:root:not(.document-scroll-hidden) .modal-content {
  inset-inline-start: calc(var(--root-scrollbar-width, 0px) / 2);
}

.scroll-container {
  left: var(--scroll-left);
  top: var(--scroll-top);
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: hidden;
  z-index: 1;
  user-select: none;
  pointer-events: none;
}

$scroll-fade-height: 2em;
.scroll-fade {
  left: 0;
  right: 0;
  height: $scroll-fade-height;
  position: absolute;
  &.scroll-fade-top {
    top: calc(min(var(--scroll-top), #{$scroll-fade-height}) - #{$scroll-fade-height});
    background: linear-gradient(
      0deg,
      transparent 0px,
      transparent 5px,
      $modal-header-border-color calc(5px + #{$scroll-fade-height})
    );
  }

  &.scroll-fade-bottom {
    bottom: calc(min(var(--scroll-bottom), #{$scroll-fade-height}) - #{$scroll-fade-height});
    background: linear-gradient(
      180deg,
      transparent 0px,
      transparent 5px,
      $modal-footer-border-color calc(5px + #{$scroll-fade-height})
    );
  }
}

// Lessen scrolling performance issues with scrollable dialog bodies.
.modal-dialog-scrollable {
  .modal-body {
    transform: translateZ(0px);
  }
}
